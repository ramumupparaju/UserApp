apply plugin: 'com.android.application'


apply plugin: 'checkstyle'
apply from: 'configuration.gradle'

android {

    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion
    defaultConfig {
        applicationId "com.incon.connect.user"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode project.versionCode
        versionName project.versionName

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        manifestPlaceholders = [HOCKEYAPP_APP_ID: "2c20d2960d0f4d028c3cd196ff6aa9aa",
                                hockeyBuildNo   : hockeyBuildNo]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    //FIXME : handle lint errors
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    useLibrary 'org.apache.http.legacy'
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {

        moonz_dev {
            buildConfigField 'String', 'SERVICE_ENDPOINT', "\"http://ec2-52-11-96-200.us-west-2.compute.amazonaws.com:9898/connect/\""
            buildConfigField 'boolean', 'LOG_VALUE', 'true'
            resValue "string", "app_name", "Connect dev"
        }
        /*client_staging {
            buildConfigField 'String', 'SERVICE_ENDPOINT', "\"http://ec2-52-11-96-200.us-west-2.compute.amazonaws.com:9898/connect/\""
            buildConfigField 'boolean', 'LOG_VALUE', 'false'
            resValue "string", "app_name", "Connect stage"
        }
        client_production {
            buildConfigField 'String', 'SERVICE_ENDPOINT', "\"http://ec2-52-11-96-200.us-west-2.compute.amazonaws.com:9898/connect/\""
            buildConfigField 'boolean', 'LOG_VALUE', 'false'
            resValue "string", "app_name", "Connect pro"
        }*/
    }

    dataBinding {
        enabled = true
    }

    // noinspection GroovyAssignabilityCheck
    task checkstyle(type: Checkstyle) {
        //NOTE: Restrict to Rewards related code only and ignore other third party code.
        source 'src/main/java/com/incon/connect/user'
        include '**/*.java'
        exclude '**/gen/**'
        exclude '**/R.java'
        exclude '**/BuildConfig.java'

        ignoreFailures false
        showViolations true

        configFile file("${project.rootDir}/config/checkstyle.xml")

        classpath = files() + configurations.compile
    }
    // inspection GroovyAssignabilityCheck

    preBuild.dependsOn('checkstyle')

}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${supportLibraryVersion}"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // material support design
    compile "com.android.support:design:${supportLibraryVersion}"
    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:support-v4:${supportLibraryVersion}"
    compile "com.android.support:support-v13:${supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    //MultiDex
    compile 'com.android.support:multidex:1.0.1'
    // retrofit
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    //Android RX
    compile 'io.reactivex.rxjava2:rxjava:2.0.7'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    // To handle events from our View/UI layer
    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    // Firebase for push notifications
    compile 'com.firebase:firebase-jobdispatcher:0.7.0'
    compile "com.google.firebase:firebase-messaging:${googlePlayVersion}"
    /*google maps*/
    compile "com.google.android.gms:play-services-places:${googlePlayVersion}"
    compile "com.google.android.gms:play-services-maps:${googlePlayVersion}"
    compile "com.google.android.gms:play-services-location:${googlePlayVersion}"
    //Dagger
    compile "com.google.dagger:dagger:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    //Logging api requests and responses
    compile "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    //Glide
    compile 'com.github.bumptech.glide:glide:4.0.0'

    // QR and Bar code scanner
    compile 'com.journeyapps:zxing-android-embedded:3.3.0'
    compile 'com.google.zxing:core:3.3.0'

    //Hockey analytics
    compile 'net.hockeyapp.android:HockeySDK:4.1.5'
    // Bottom navigation view
    compile 'com.github.ittianyu:BottomNavigationViewEx:1.2.0'
    // font typeface
    compile 'uk.co.chrisjenx:calligraphy:2.3.0'
    // material spinner
    compile 'com.weiwangcn.betterspinner:library-material:1.1.0'
    //rounded imageview
    compile 'de.hdodenhof:circleimageview:2.1.0'
    allprojects {
        repositories {
            maven { url "https://jitpack.io" }
        }
    }
}
// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'